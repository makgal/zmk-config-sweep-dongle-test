// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hmm: hmm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        delete_right {
            bindings = <&kp DELETE>;
            key-positions = <33 25>;
            layers = <1 3>;
        };

        middle_click_right {
            bindings = <&mkp MB3>;
            key-positions = <33 25>;
            layers = <2>;
        };

        delete_left {
            bindings = <&kp DELETE>;
            key-positions = <30 24>;
            layers = <3 8>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <33 25>;
            layers = <4>;
        };

        dot {
            bindings = <&kp DOT>;
            key-positions = <31 23>;
            layers = <5>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <30 23>;
            layers = <5>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <13 16>;
            layers = <0>;
        };

        win_left {
            bindings = <&kp LEFT_WIN>;
            key-positions = <13 12>;
        };

        win_right {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <16 17>;
        };

        command_grave_left {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <2 1>;
        };

        escape_media {
            bindings = <&hmm 4 ESCAPE>;
            key-positions = <30 24>;
            layers = <0>;
        };

        delete_fun {
            bindings = <&hmm 7 DELETE>;
            key-positions = <33 25>;
            layers = <0>;
        };

        command_grave_right {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <7 8>;
        };

        go_to_base_left {
            bindings = <&to 0>;
            key-positions = <3 2>;
        };

        go_to_base_right {
            bindings = <&to 0>;
            key-positions = <7 6>;
        };

        constant_nav_left {
            bindings = <&to 1>;
            key-positions = <14 30>;
            layers = <0>;
        };

        constant_mouse_left {
            bindings = <&to 2>;
            key-positions = <14 31>;
            layers = <0>;
        };

        constant_media_left {
            bindings = <&to 4>;
            key-positions = <14 30 24>;
            layers = <0>;
        };

        constant_num_right {
            bindings = <&to 5>;
            key-positions = <15 33>;
            layers = <0>;
        };

        constant_sym_right {
            bindings = <&to 6>;
            key-positions = <15 32>;
            layers = <0>;
        };

        constant_fun_right {
            bindings = <&to 7>;
            key-positions = <15 33 25>;
            layers = <0>;
        };

        constant_nav_right {
            bindings = <&to 1>;
            key-positions = <33 6>;
            layers = <0>;
        };

        constant_mouse_right {
            bindings = <&to 2>;
            key-positions = <32 6>;
            layers = <0>;
        };

        constant_media_right {
            bindings = <&to 4>;
            key-positions = <33 6 25>;
            layers = <0>;
        };

        constant_num_left {
            bindings = <&to 5>;
            key-positions = <30 3>;
            layers = <0>;
        };

        constant_sym_left {
            bindings = <&to 6>;
            key-positions = <31 3>;
            layers = <0>;
        };

        constant_fun_left {
            bindings = <&to 7>;
            key-positions = <30 3 24>;
            layers = <0>;
        };

        middle_click_left {
            bindings = <&mkp MB3>;
            key-positions = <30 24>;
            layers = <9>;
        };

        constant_left_mouse {
            bindings = <&to 9>;
            key-positions = <0 31>;
            layers = <0>;
        };

        constant_left_nav {
            bindings = <&to 8>;
            key-positions = <0 30>;
            layers = <0>;
        };

        russian_dot {
            bindings = <&kp SLASH>;
            key-positions = <31 13>;
            layers = <5 6>;
        };

        russian_comma {
            bindings = <&kp QUESTION>;
            key-positions = <30 13>;
            layers = <5 6>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <30 23>;
            layers = <6>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <31 23>;
            layers = <6>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <30 24>;
            layers = <5 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q            &kp W         &kp E            &kp R              &kp T         &kp Y         &kp U               &kp I             &kp O         &kp P
&hrm LEFT_ALT A  &hrm LCTRL S  &hrm LEFT_WIN D  &hrm LEFT_SHIFT F  &kp G         &kp H         &hrm RIGHT_SHIFT J  &hrm RIGHT_WIN K  &hrm RCTRL L  &hrm RIGHT_ALT SEMI
&hmm 3 Z         &kp X         &kp C            &kp V              &kp B         &kp N         &kp M               &kp COMMA         &kp DOT       &hmm 3 SLASH
                                                &hmm 1 SPACE       &hmm 2 TAB    &hmm 6 ENTER  &hmm 5 BACKSPACE
            >;
        };

        nav {
            bindings = <
&none         &none      &none         &none           &none    &kp LG(Y)       &kp LG(V)       &kp LG(C)     &kp LG(X)  &kp LG(Z)
&kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp CAPSLOCK
&none         &none      &none         &none           &none    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &kp INSERT
                                       &none           &none    &kp ENTER       &kp BACKSPACE
            >;
        };

        mouse {
            bindings = <
&none         &none      &none         &none           &none    &kp LG(Y)       &kp LG(V)       &kp LG(C)     &kp LG(X)        &kp LG(Z)
&kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB4
&none         &none      &none         &none           &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp MB5
                                       &none           &none    &mkp RCLK       &mkp LCLK
            >;
        };

        button {
            bindings = <
&kp LG(Z)     &kp LG(X)  &kp LG(C)     &kp LG(V)       &kp LG(Y)    &kp LG(Y)  &kp LG(V)        &kp LG(C)      &kp LG(X)  &kp LG(Z)
&kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LG(A)    &kp LG(A)  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_ALT
&none         &kp HOME   &kp PAGE_UP   &kp PAGE_DOWN   &kp END      &kp HOME   &kp PAGE_DOWN    &kp PAGE_UP    &kp END    &none
                                       &kp BACKSPACE   &kp ENTER    &kp ENTER  &kp BACKSPACE
            >;
        };

        media {
            bindings = <
&none         &none      &none         &none           &none    &none         &kp C_BRI_DN  &kp C_BRI_UP  &none         &none
&kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &bt BT_CLR
&none         &none      &none         &none           &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                                       &none           &none    &kp C_STOP    &kp C_PP
            >;
        };

        num {
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &none          &none            &none          &none      &none
&kp SQT           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL            &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_ALT
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &none          &kp SPACE        &kp ENTER      &none      &none
                                              &kp NUMBER_0  &kp MINUS            &none          &none
            >;
        };

        sym {
            bindings = <
&kp LEFT_BRACE     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none          &none            &none          &none      &none
&kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT   &kp CARET              &kp PLUS           &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_ALT
&kp TILDE          &kp EXCLAMATION  &kp AT_SIGN   &kp HASH               &kp PIPE           &none          &kp SPACE        &kp ENTER      &none      &none
                                                  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none          &none
            >;
        };

        fun {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9     &kp PRINTSCREEN    &none  &none            &none          &none      &none
&kp F11  &kp F4  &kp F5  &kp F6     &kp SCROLLLOCK     &none  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_ALT
&kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK    &none  &none            &none          &none      &none
                         &kp SPACE  &kp ENTER          &none  &none
            >;
        };

        nav_left {
            bindings = <
&kp LG(Z)     &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Y)    &none  &none  &none  &none  &none
&kp CAPSLOCK  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT    &none  &none  &none  &none  &none
&kp INSERT    &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN   &kp END      &none  &none  &none  &none  &none
                                            &kp BACKSPACE   &kp ENTER    &none  &none
            >;
        };

        mouse_left {
            bindings = <
&kp LG(Z)  &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Y)          &none  &none  &none  &none  &none
&mkp MB4   &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none  &none  &none  &none  &none
&mkp MB5   &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT    &none  &none  &none  &none  &none
                                         &mkp LCLK       &mkp RCLK          &none  &none
            >;
        };
    };
};
